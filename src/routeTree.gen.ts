/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as ProductsIndexImport } from './routes/products/index'
import { Route as OrdersIndexImport } from './routes/orders/index'
import { Route as OrdersCreateImport } from './routes/orders/create'
import { Route as ProductsDetailProductIdImport } from './routes/products/detail/$productId'
import { Route as OrdersDetailOrderIdImport } from './routes/orders/detail/$orderId'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsIndexRoute = ProductsIndexImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => rootRoute,
} as any)

const OrdersIndexRoute = OrdersIndexImport.update({
  id: '/orders/',
  path: '/orders/',
  getParentRoute: () => rootRoute,
} as any)

const OrdersCreateRoute = OrdersCreateImport.update({
  id: '/orders/create',
  path: '/orders/create',
  getParentRoute: () => rootRoute,
} as any)

const ProductsDetailProductIdRoute = ProductsDetailProductIdImport.update({
  id: '/products/detail/$productId',
  path: '/products/detail/$productId',
  getParentRoute: () => rootRoute,
} as any)

const OrdersDetailOrderIdRoute = OrdersDetailOrderIdImport.update({
  id: '/orders/detail/$orderId',
  path: '/orders/detail/$orderId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/orders/create': {
      id: '/orders/create'
      path: '/orders/create'
      fullPath: '/orders/create'
      preLoaderRoute: typeof OrdersCreateImport
      parentRoute: typeof rootRoute
    }
    '/orders/': {
      id: '/orders/'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof OrdersIndexImport
      parentRoute: typeof rootRoute
    }
    '/products/': {
      id: '/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsIndexImport
      parentRoute: typeof rootRoute
    }
    '/orders/detail/$orderId': {
      id: '/orders/detail/$orderId'
      path: '/orders/detail/$orderId'
      fullPath: '/orders/detail/$orderId'
      preLoaderRoute: typeof OrdersDetailOrderIdImport
      parentRoute: typeof rootRoute
    }
    '/products/detail/$productId': {
      id: '/products/detail/$productId'
      path: '/products/detail/$productId'
      fullPath: '/products/detail/$productId'
      preLoaderRoute: typeof ProductsDetailProductIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/orders/create': typeof OrdersCreateRoute
  '/orders': typeof OrdersIndexRoute
  '/products': typeof ProductsIndexRoute
  '/orders/detail/$orderId': typeof OrdersDetailOrderIdRoute
  '/products/detail/$productId': typeof ProductsDetailProductIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/orders/create': typeof OrdersCreateRoute
  '/orders': typeof OrdersIndexRoute
  '/products': typeof ProductsIndexRoute
  '/orders/detail/$orderId': typeof OrdersDetailOrderIdRoute
  '/products/detail/$productId': typeof ProductsDetailProductIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/orders/create': typeof OrdersCreateRoute
  '/orders/': typeof OrdersIndexRoute
  '/products/': typeof ProductsIndexRoute
  '/orders/detail/$orderId': typeof OrdersDetailOrderIdRoute
  '/products/detail/$productId': typeof ProductsDetailProductIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/orders/create'
    | '/orders'
    | '/products'
    | '/orders/detail/$orderId'
    | '/products/detail/$productId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/orders/create'
    | '/orders'
    | '/products'
    | '/orders/detail/$orderId'
    | '/products/detail/$productId'
  id:
    | '__root__'
    | '/'
    | '/orders/create'
    | '/orders/'
    | '/products/'
    | '/orders/detail/$orderId'
    | '/products/detail/$productId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  OrdersCreateRoute: typeof OrdersCreateRoute
  OrdersIndexRoute: typeof OrdersIndexRoute
  ProductsIndexRoute: typeof ProductsIndexRoute
  OrdersDetailOrderIdRoute: typeof OrdersDetailOrderIdRoute
  ProductsDetailProductIdRoute: typeof ProductsDetailProductIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  OrdersCreateRoute: OrdersCreateRoute,
  OrdersIndexRoute: OrdersIndexRoute,
  ProductsIndexRoute: ProductsIndexRoute,
  OrdersDetailOrderIdRoute: OrdersDetailOrderIdRoute,
  ProductsDetailProductIdRoute: ProductsDetailProductIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/orders/create",
        "/orders/",
        "/products/",
        "/orders/detail/$orderId",
        "/products/detail/$productId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/orders/create": {
      "filePath": "orders/create.tsx"
    },
    "/orders/": {
      "filePath": "orders/index.tsx"
    },
    "/products/": {
      "filePath": "products/index.tsx"
    },
    "/orders/detail/$orderId": {
      "filePath": "orders/detail/$orderId.tsx"
    },
    "/products/detail/$productId": {
      "filePath": "products/detail/$productId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
